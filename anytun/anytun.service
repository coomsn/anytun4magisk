#!/system/bin/sh
export PATH="/data/adb/magisk:/data/adb/ksu/bin:/data/adb/ap/bin:$PATH:/data/data/com.termux/files/usr/bin"
scripts=$(realpath $0)
scripts_dir=$(dirname ${scripts})
log() {
  export TZ=Asia/Shanghai
  now=$(date +"[%Y-%m-%d %H:%M:%S]")
  case $1 in
    Info)
      [ -t 1 ] && echo -e "\033[1;32m${now} [Info]: $2\033[0m" || echo "${now} [Info]: $2"
      ;;
    Warn)
      [ -t 1 ] && echo -e "\033[1;33m${now} [Warn]: $2\033[0m" || echo "${now} [Warn]: $2"
      ;;
    Error)
      [ -t 1 ] && echo -e "\033[1;31m${now} [Error]: $2\033[0m" || echo "${now} [Error]: $2"
      ;;
    Status)
      [ -t 1 ] && echo -e "\033[1;38;5;208m${now} [Status]: $2\033[0m" || echo "${now} [Status]: $2"
      ;;
    *)
      [ -t 1 ] && echo -e "\033[1;30m${now} [$1]: $2\033[0m" || echo "${now} [$1]: $2"
      ;;
  esac
}
disable_ipv6() {
  echo 0 > /proc/sys/net/ipv6/conf/all/accept_ra
  echo 0 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
  echo 1 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 1 > /proc/sys/net/ipv6/conf/default/disable_ipv6
  echo 1 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
  log Info "ipv6: disable" >> "${scripts_dir}/run.log"
} 
enable_ipv6() {
  echo 1 > /proc/sys/net/ipv4/ip_forward
  echo 2 > /proc/sys/net/ipv4/conf/default/rp_filter
  echo 2 > /proc/sys/net/ipv4/conf/all/rp_filter
  echo 1 > /proc/sys/net/ipv6/conf/all/accept_ra
  echo 1 > /proc/sys/net/ipv6/conf/wlan0/accept_ra
  echo 0 > /proc/sys/net/ipv6/conf/all/disable_ipv6
  echo 0 > /proc/sys/net/ipv6/conf/default/disable_ipv6
  echo 0 > /proc/sys/net/ipv6/conf/wlan0/disable_ipv6
  log Info "ipv6: enable" >> "${scripts_dir}/run.log"
} 
tun_index_device(){
local action=$1
rt_tables="/data/misc/net/rt_tables"
if [ "${action}" = "-I" ]; then
  while grep -qE "tun[0-9]$" "${rt_tables}"; do
    if grep -qE "tun[0-9]$" "${rt_tables}"; then
      break
    fi
    sleep 2
  done
  if grep -E "tun[0-9]$" "${rt_tables}" > "${scripts_dir}/tables.tmp"; then
      read tun_table_index tun_device < "${scripts_dir}/tables.tmp"
  else
      log Warn "unable to find index data" >> "${scripts_dir}/run.log"
  fi
elif [ "${action}" = "-D" ]; then
  if [ -f "${scripts_dir}/tables.tmp" ]; then
      read tun_table_index tun_device < "${scripts_dir}/tables.tmp"
  else
      log Warn "rt_tables file not found, unable to retrieve index data" >> "${scripts_dir}/run.log"
  fi
fi
  log Info "tun_device: ${tun_device}" >> "${scripts_dir}/run.log"
  log Info "tun_table_index: ${tun_table_index}" >> "${scripts_dir}/run.log"
}
tun_ip_rules() {
local action=$1
ipv4_rules=(
  "iif lo goto 6000 pref 5000"
  "iif ${tun_device} lookup main suppress_prefixlength 0 pref 5010"
  "iif ${tun_device} goto 6000 pref 5020"
  "from 10.0.0.0/8 lookup ${tun_table_index} pref 5030"
  "from 172.16.0.0/12 lookup ${tun_table_index} pref 5040"
  "from 192.168.0.0/16 lookup ${tun_table_index} pref 5050"
  "nop pref 6000"
  "lookup main pref 7000"
  "from all iif ${tun_device} lookup main suppress_prefixlength 0 pref 8000"
)
  for rule in "${ipv4_rules[@]}"; do
    ip -4 rule "${action}" ${rule} > /dev/null 2>&1
  done
ipv6_rules=(
  "iif lo goto 6000 pref 5000"
  "iif ${tun_device} lookup main suppress_prefixlength 0 pref 5010"
  "iif ${tun_device} goto 6000 pref 5020"
  # "from 2001:db8::/32 lookup ${tun_table_index} pref 5030"
  # "from fc00::/7 lookup ${tun_table_index} pref 5040"
  # "from fd00::/8 lookup ${tun_table_index} pref 5050"
  "nop pref 6000"
  "lookup main pref 7000"
  "from all iif ${tun_device} lookup main suppress_prefixlength 0 pref 8000"
)
  for rule in "${ipv6_rules[@]}"; do
    ip -6 rule "${action}" ${rule} > /dev/null 2>&1
  done
}
delete_ip_rules() {
  for preff in 5000 5010 5020 5030 5040 5050 6000 7000 8000; do
    ip -4 rule del pref $preff > /dev/null 2>&1
    ip -6 rule del pref $preff > /dev/null 2>&1
  done
} > /dev/null 2>&1
iptables_rules() {
local iptables=$1
local action=$2
if [[ "${action}" == "-I" ]]; then
    ${iptables} -N TUN_FORWARD 2>/dev/null
    ${iptables} -F TUN_FORWARD 2>/dev/null
    ${iptables} "${action}" TUN_FORWARD -i "${tun_device}" -j ACCEPT
    ${iptables} "${action}" TUN_FORWARD -o "${tun_device}" -j ACCEPT
    ${iptables} "${action}" FORWARD -j TUN_FORWARD
elif [[ "${action}" == "-D" ]]; then
    ${iptables} "${action}" FORWARD -j TUN_FORWARD
    ${iptables} -F TUN_FORWARD 2>/dev/null
    ${iptables} -X TUN_FORWARD 2>/dev/null
fi
# only for vpn apk
if [[ "${iptables}" == "iptables" ]]; then
  if [[ "${action}" == "-I" ]]; then
    iptables -t nat -N TUN_PREROUTING 2>/dev/null
    iptables -t nat -F TUN_PREROUTING 2>/dev/null
    iptables -t nat -N TUN_POSTROUTING 2>/dev/null
    iptables -t nat -F TUN_POSTROUTING 2>/dev/null
    iptables -t nat "${action}" TUN_PREROUTING -p udp --dport 53 -j DNAT --to-destination 1.1.1.1:53
    iptables -t nat "${action}" TUN_POSTROUTING -o "${tun_device}" -j MASQUERADE
    iptables -t nat "${action}" PREROUTING -j TUN_PREROUTING
    iptables -t nat "${action}" POSTROUTING -j TUN_POSTROUTING
  elif [[ "${action}" == "-D" ]]; then
    iptables -t nat "${action}" PREROUTING -j TUN_PREROUTING
    iptables -t nat "${action}" POSTROUTING -j TUN_POSTROUTING
    iptables -t nat -F TUN_PREROUTING 2>/dev/null
    iptables -t nat -F TUN_POSTROUTING 2>/dev/null
    iptables -t nat -X TUN_PREROUTING 2>/dev/null
    iptables -t nat -X TUN_POSTROUTING 2>/dev/null
  fi
 fi
}
forward() {
local action=$1
if [ "${action}" = "-I" ]; then
    echo 1 > /proc/sys/net/ipv4/ip_forward
    echo 2 > /proc/sys/net/ipv4/conf/default/rp_filter
    echo 2 > /proc/sys/net/ipv4/conf/all/rp_filter
fi
if [ "${action}" = "-I" ]; then
    delete_ip_rules
    tun_ip_rules "add"
    enable_ipv6
elif [ "${action}" = "-D" ]; then
    tun_ip_rules "del" 
    delete_ip_rules
    # disable_ipv6
fi
  iptables_rules "iptables" "${action}"
  iptables_rules "ip6tables" "${action}"
}
clear
start_tun() {
log info "---welcome---" > "${scripts_dir}/run.log"
tun_index_device "-I"
if [ -n "${tun_device}" ]; then
  forward "-I"
  log Info "Tun proxy started" >> "${scripts_dir}/run.log"
  log Info "Tun proxy started"
else
  log Warn "Open the vpn and restart the module." > "${scripts_dir}/run.log"
  rm -f "${scripts_dir}/tables.tmp" 2>/dev/null
fi
}
stop_tun() {
log info "---goodbye---" > "${scripts_dir}/run.log"
tun_index_device "-D"
if [ -n "${tun_device}" ]; then
  forward "-D"
  log Info "Tun proxy stopped" >> "${scripts_dir}/run.log"
else
  log Warn "module not enabled" > "${scripts_dir}/run.log"
fi
rm -f "${scripts_dir}/tables.tmp" 2>/dev/null
}
# 2024 9 25 2330